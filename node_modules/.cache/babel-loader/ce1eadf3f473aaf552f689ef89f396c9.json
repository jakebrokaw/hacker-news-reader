{"ast":null,"code":"import _classCallCheck from \"/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport List from 'components/List';\nimport Loader from 'components/Loader';\nimport { colorsDark } from 'styles/palette';\nimport { Wrapper, Title } from './styles';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.fetchStories = function () {\n      var _this$props = _this.props,\n          storyIds = _this$props.storyIds,\n          page = _this$props.page,\n          fetchStories = _this$props.fetchStories,\n          isFetching = _this$props.isFetching;\n\n      if (!isFetching) {\n        fetchStories({\n          storyIds: storyIds,\n          page: page\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStoriesFirstPage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          stories = _this$props2.stories,\n          hasMoreStories = _this$props2.hasMoreStories;\n      return React.createElement(ThemeProvider, {\n        theme: colorsDark,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Hacker News Reader\"), React.createElement(InfiniteScroll, {\n        dataLength: stories.length,\n        next: this.fetchStories,\n        hasMore: hasMoreStories,\n        loader: React.createElement(Loader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }),\n        style: {\n          height: '100%',\n          overflow: 'visible'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(List, {\n        stories: stories,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jake/Desktop/side-projects/hacker-news-reader--doist/hacker-news-reader/src/components/App/App.js"],"names":["React","Component","ThemeProvider","InfiniteScroll","List","Loader","colorsDark","Wrapper","Title","App","fetchStories","props","storyIds","page","isFetching","fetchStoriesFirstPage","stories","hasMoreStories","length","height","overflow"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,gBAA3B;AAEA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,UAA/B;;IAEMC,G;;;;;;;;;;;;;;;;;;UAKJC,Y,GAAe,YAAM;AAAA,wBACkC,MAAKC,KADvC;AAAA,UACXC,QADW,eACXA,QADW;AAAA,UACDC,IADC,eACDA,IADC;AAAA,UACKH,YADL,eACKA,YADL;AAAA,UACmBI,UADnB,eACmBA,UADnB;;AAEnB,UAAI,CAACA,UAAL,EAAiB;AACfJ,QAAAA,YAAY,CAAC;AAAEE,UAAAA,QAAQ,EAARA,QAAF;AAAYC,UAAAA,IAAI,EAAJA;AAAZ,SAAD,CAAZ;AACD;AACF,K;;;;;;;wCATmB;AAClB,WAAKF,KAAL,CAAWI,qBAAX;AACD;;;6BASQ;AAAA,yBAC6B,KAAKJ,KADlC;AAAA,UACCK,OADD,gBACCA,OADD;AAAA,UACUC,cADV,gBACUA,cADV;AAEP,aACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAEX,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,cAAD;AACE,QAAA,UAAU,EAAEU,OAAO,CAACE,MADtB;AAEE,QAAA,IAAI,EAAE,KAAKR,YAFb;AAGE,QAAA,OAAO,EAAEO,cAHX;AAIE,QAAA,MAAM,EAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJV;AAKE,QAAA,KAAK,EAAE;AACLE,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,QAAQ,EAAE;AAFL,SALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAEJ,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CAFF,CADF,CADF,CADF;AAqBD;;;;EAnCef,S;;AAsClB,eAAeQ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport List from 'components/List';\nimport Loader from 'components/Loader';\nimport { colorsDark } from 'styles/palette';\n\nimport { Wrapper, Title } from './styles';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchStoriesFirstPage();\n  }\n\n  fetchStories = () => {\n    const { storyIds, page, fetchStories, isFetching } = this.props;\n    if (!isFetching) {\n      fetchStories({ storyIds, page });\n    }\n  };\n\n  render() {\n    const { stories, hasMoreStories } = this.props;\n    return (\n      <ThemeProvider theme={colorsDark}>\n        <div>\n          <Wrapper>\n            <Title>Hacker News Reader</Title>\n            <InfiniteScroll\n              dataLength={stories.length}\n              next={this.fetchStories}\n              hasMore={hasMoreStories}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible',\n              }}\n            >\n              <List stories={stories} />\n            </InfiniteScroll>\n          </Wrapper>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}