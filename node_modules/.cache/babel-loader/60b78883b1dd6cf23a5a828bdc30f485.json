{"ast":null,"code":"import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport App from './App';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    stories: state.story.stories,\n    page: state.story.page,\n    storyIds: state.story.storyIds,\n    isFetching: state.story.isFetching\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    // fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\n    fetchStoriesFirstPage: function fetchStoriesFirstPage() {\n      return dispatch(actions.fetchStoryIds());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jake/Desktop/side-projects/hacker-news-reader--doist/test-new/hn-clone/src/components/App/index.js"],"names":["connect","actions","App","mapStateToProps","state","stories","story","page","storyIds","isFetching","mapDispatchToProps","dispatch","fetchStoriesFirstPage","fetchStoryIds"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,OAAO,EAAED,KAAK,CAACE,KAAN,CAAYD,OADW;AAEhCE,IAAAA,IAAI,EAAEH,KAAK,CAACE,KAAN,CAAYC,IAFc;AAGhCC,IAAAA,QAAQ,EAAEJ,KAAK,CAACE,KAAN,CAAYE,QAHU;AAIhCC,IAAAA,UAAU,EAAEL,KAAK,CAACE,KAAN,CAAYG;AAJQ,GAAL;AAAA,CAA7B;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtC;AACAC,IAAAA,qBAAqB,EAAE;AAAA,aAAMD,QAAQ,CAACV,OAAO,CAACY,aAAR,EAAD,CAAd;AAAA;AAFe,GAAL;AAAA,CAAnC;;AAKA,eAAeb,OAAO,CAACG,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CR,GAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  // fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}